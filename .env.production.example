# Production Environment Configuration Template
# Copy this file to .env.production and fill in your production values

# =============================================================================
# OPENAI CONFIGURATION
# =============================================================================
# Production OpenAI API key with GPT-4o and embeddings access
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your_production_openai_api_key_here

# OpenAI Organization ID (optional, for usage tracking)
OPENAI_ORG_ID=org-your_organization_id_here

# =============================================================================
# VECTOR SEARCH CONFIGURATION
# =============================================================================
# Vector search is handled by Supabase pgvector extension
# No additional configuration needed - vectors are stored in the database

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================
# Production Supabase project URL
# Format: https://your-project-ref.supabase.co
NEXT_PUBLIC_SUPABASE_URL=https://your_production_project_ref.supabase.co

# Production Supabase anonymous key (public)
# Get from: Supabase Dashboard > Settings > API
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_production_supabase_anon_key_here

# Production Supabase service role key (private - server-side only)
# NEVER expose this in client-side code
SUPABASE_SERVICE_ROLE_KEY=your_production_supabase_service_role_key_here

# =============================================================================
# EXTERNAL API KEYS
# =============================================================================
# RAWG API key for game data ingestion
# Get from: https://rawg.io/apidocs
RAWG_API_KEY=your_production_rawg_api_key_here

# Steam Web API key (optional, for enhanced Steam data)
# Get from: https://steamcommunity.com/dev/apikey
STEAM_API_KEY=your_production_steam_api_key_here

# OpenCritic API key (optional, for critic scores)
# Contact OpenCritic for API access
OPENCRITIC_API_KEY=your_production_opencritic_api_key_here

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================
# Sentry DSN for error tracking (optional)
SENTRY_DSN=https://your_sentry_dsn_here@sentry.io/project_id

# Google Analytics tracking ID (optional)
NEXT_PUBLIC_GA_TRACKING_ID=G-YOUR_GA_TRACKING_ID

# PostHog API key for product analytics (optional)
NEXT_PUBLIC_POSTHOG_KEY=phc_your_posthog_key_here
NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT secret for session management (generate a strong random string)
JWT_SECRET=your_super_secure_jwt_secret_at_least_32_characters_long

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=https://gamecompare.ai,https://www.gamecompare.ai

# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=30

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================
# Database connection pool settings
DB_POOL_MIN=2
DB_POOL_MAX=10

# Cache TTL settings (in seconds)
GAME_CACHE_TTL=300
SEARCH_CACHE_TTL=600

# Batch processing limits
INGESTION_BATCH_SIZE=50
EMBEDDING_BATCH_SIZE=20

# Redis Configuration (for high-performance caching)
REDIS_HOST=your_redis_host_here
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here
REDIS_DB=0

# CDN Configuration (for static asset optimization)
CDN_PROVIDER=cloudflare
CDN_BASE_URL=https://your-cdn-domain.com
CDN_API_KEY=your_cdn_api_key_here
CDN_ZONE_ID=your_cloudflare_zone_id_here
CDN_DISTRIBUTION_ID=your_aws_cloudfront_distribution_id_here

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable features in production
ENABLE_CONVERSATION_TRACKING=true
ENABLE_AFFILIATE_TRACKING=true
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_DEBUG_LOGGING=false

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# Environment identifier
NODE_ENV=production

# Application version (for monitoring and debugging)
APP_VERSION=1.0.0

# Build timestamp (automatically set during deployment)
BUILD_TIMESTAMP=2024-01-17T10:00:00Z

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================
# AWS S3 configuration for backups (optional)
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1
BACKUP_S3_BUCKET=gamecompare-backups

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================
# Slack webhook for alerts (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# Discord webhook for alerts (optional)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/discord/webhook

# Email service configuration (optional)
SMTP_HOST=smtp.your-email-provider.com
SMTP_PORT=587
SMTP_USER=your_smtp_username
SMTP_PASS=your_smtp_password
SMTP_FROM=noreply@gamecompare.ai

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit this file with real values to version control
# 2. Use a secure secret management service in production
# 3. Rotate API keys regularly (quarterly recommended)
# 4. Monitor API usage to avoid unexpected charges
# 5. Set up billing alerts for all external services
# 6. Test all integrations in staging before production deployment